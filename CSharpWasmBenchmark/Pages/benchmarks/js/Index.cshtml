@page

<CshtmlHead>
    <script src="/Benchmarking/JavaScriptCore/BenchmarkRecords.js"></script>
    <script src="/Benchmarking/JavaScriptCore/BenchmarkRunner.js"></script>

    @foreach (var filePath in Directory.GetFiles(Program.BenchmarkingPath + "/Benchmarks", "*.*", SearchOption.AllDirectories))
    {
        var url = filePath.Split(Program.RootPath).Last().Replace("\\", "/");

        if (url.EndsWith(".js"))
        {
            <script src="@url"></script>
        }
        else if (url.EndsWith(".css"))
        {
            <link rel="stylesheet" href="@url" />
        }
    }

    <script src="/Benchmarking/JavaScriptCore/BenchmarkCategory.js"></script>

    @foreach (var bc in BenchmarkCategory.All)
    {
        // This code generates some JS.
        // Generates the benchmark categories of C# to JS.

        <script>
            BenchmarkCategory.@(bc.Name) = new BenchmarkCategory("@(bc.Name)",
            [
                @string.Join(", ", bc.Benchmarks.Select(b => $"new {b.GetType().Name}()"))
            ]);
        </script>

    }

    <script>
        async function waitUntilCanStartBenchmark()
        {
            // JS is single threaded. No need to wait for anything.
        }
    </script>

    @foreach (var bc in BenchmarkCategory.All)
    {
        // This code generates some JS.
        // Note that the Parameter property of a C# Benchmark object is converted to JSON
        // and then the Parameter property of a JS Benchmark object is set to the parsed
        // result of this JSON.

        var jsonParameters = new List<string>();
        foreach (var b in bc.Benchmarks)
        {
            jsonParameters.Add("`" + JsonSerializer.Serialize(b.Parameters) + "`");
        }

        <script>
            function @(bc.Name)()
            {
                var benchmarkCategory = BenchmarkCategory.@(bc.Name);
                var parameterJsonList = [@Html.Raw(string.Join(",", jsonParameters))];

                for(var i = 0; i < benchmarkCategory.Benchmarks.length; i++)
                {
                    var b = benchmarkCategory.Benchmarks[i];
                    b.Parameters = JSON.parse(parameterJsonList[i]);
                }

                return BenchmarkRunner.RunBenchmarkCategoryToJson(BenchmarkCategory.@(bc.Name));
            }
        </script>
    }
</CshtmlHead>


<h1 class="d-flex">
    JavaScript <BenchmarkCategoryBatchActions />
</h1>

<p>
    JavaScript benchmarks.
</p>

@foreach (var bc in BenchmarkCategory.All)
{
    <BenchmarkCategoryVisualizer BenchmarkCategory="bc" />
}